backport fixes for file access restrictions

--- vfe/unix/unixoptions.cpp
+++ vfe/unix/unixoptions.cpp
@@ -581,7 +581,7 @@
 #ifdef UNIX_DEBUG
 			cerr << "    su: " << s << endl;
 #endif
-			pos = s.find("/..", pos+3);
+			pos = s.find("/..", pos2);
 		}
 
 		// remove the last "/." if any
@@ -825,7 +825,7 @@
 			{
 				// search setting
 				for(i = 0; io_settings[i].label; ++i)
-					if(line != string(io_settings[i].label))
+					if(line == string(io_settings[i].label))
 						break;
 				file_io = io_settings[i].value;
 
@@ -1038,7 +1038,10 @@
 
 		for(list<UnixPath>::iterator iter = m_permitted_paths.begin(); iter != m_permitted_paths.end(); iter++)
 		{
-			m_Session->AddReadPath(iter->str, iter->descend);
+			if (iter->writable)
+				m_Session->AddWritePath(iter->str, iter->descend);
+			else
+				m_Session->AddReadPath(iter->str, iter->descend);
 #ifdef UNIX_DEBUG
 			fprintf(stderr,
 				"  %s%s = \"%s\"\n",
--- vfe/unix/vfeplatform.cpp
+++ vfe/unix/vfeplatform.cpp
@@ -243,7 +243,7 @@
 	// case-sensitive string comparison
 	bool vfeUnixSession::StrCompare (const UCS2String& lhs, const UCS2String& rhs) const
 	{
-		return lhs.compare(rhs);
+		return !lhs.compare(rhs);
 	}
 
 	/////////////////////////////////////////////////////////////////////////
